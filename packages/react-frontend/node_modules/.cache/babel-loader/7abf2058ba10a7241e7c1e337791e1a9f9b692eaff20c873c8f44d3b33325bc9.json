{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivpri\\\\csc307-react-app\\\\packages\\\\react-frontend\\\\src\\\\Form.js\",\n  _s = $RefreshSig$();\n// src/Form.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  const [person, setPerson] = useState({\n    id: \"\",\n    name: \"\",\n    job: \"\"\n  });\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === \"job\") setPerson({\n      id: '',\n      name: person['name'],\n      job: value\n    });else setPerson({\n      id: '',\n      name: value,\n      job: person['job']\n    });\n  }\n  function submitForm() {\n    //id is assigned after user submits form\n    props.handleSubmit(person);\n    const randomID = generateRandomID();\n    setPerson({\n      id: randomID,\n      name: '',\n      job: ''\n    });\n  }\n  function generateRandomID() {\n    const letters = 'abcdefghijklmnopqrstuvwxyz';\n    const numbers = '0123456789';\n    let randomID = '';\n\n    // Generate 3 random lowercase letters\n    for (let i = 0; i < 3; i++) {\n      const randomLetter = letters[Math.floor(Math.random() * letters.length)];\n      randomID += randomLetter;\n    }\n\n    // Generate 3 random numbers\n    for (let i = 0; i < 3; i++) {\n      const randomNumber = numbers[Math.floor(Math.random() * numbers.length)];\n      randomID += randomNumber;\n    }\n    return randomID;\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: person.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"job\",\n      children: \"Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"job\",\n      id: \"job\",\n      value: person.job,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      onClick: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"tc7/CAtl0w7PC1kBTsF3fzs1pq0=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","props","_s","person","setPerson","id","name","job","handleChange","event","value","target","submitForm","handleSubmit","randomID","generateRandomID","letters","numbers","i","randomLetter","Math","floor","random","length","randomNumber","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ivpri/csc307-react-app/packages/react-frontend/src/Form.js"],"sourcesContent":["// src/Form.js\r\nimport React, {useState} from 'react';\r\n\r\nfunction Form(props) {\r\n  const [person, setPerson] = useState(\r\n     {\r\n        id: \"\",\r\n        name: \"\",\r\n        job: \"\",\r\n     }\r\n  );\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    \r\n    if (name === \"job\")\r\n      setPerson(\r\n         {id: '', name: person['name'], job: value}\r\n      );\r\n    else     \r\n       setPerson(\r\n         {id: '', name: value, job: person['job']}   \r\n       );\r\n  }\r\n\r\n  function submitForm() { //id is assigned after user submits form\r\n    props.handleSubmit(person);\r\n    const randomID = generateRandomID();\r\n    setPerson({id: randomID, name: '', job: ''});\r\n  }\r\n\r\n  function generateRandomID() {\r\n    const letters = 'abcdefghijklmnopqrstuvwxyz';\r\n    const numbers = '0123456789';\r\n    let randomID = '';\r\n  \r\n    // Generate 3 random lowercase letters\r\n    for (let i = 0; i < 3; i++) {\r\n      const randomLetter = letters[Math.floor(Math.random() * letters.length)];\r\n      randomID += randomLetter;\r\n    }\r\n  \r\n    // Generate 3 random numbers\r\n    for (let i = 0; i < 3; i++) {\r\n      const randomNumber = numbers[Math.floor(Math.random() * numbers.length)];\r\n      randomID += randomNumber;\r\n    }\r\n  \r\n    return randomID;\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"name\">Name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        value={person.name}\r\n        onChange={handleChange} />\r\n      <label htmlFor=\"job\">Job</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"job\"\r\n        id=\"job\"\r\n        value={person.job}\r\n        onChange={handleChange} />\r\n      <input \r\n        type=\"button\" \r\n        value=\"Submit\" \r\n        onClick={submitForm} />\r\n    </form>\r\n);\r\n\r\n}\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}